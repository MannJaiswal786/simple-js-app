let pokemonRepository = (function () {
  let t = [],
    e = "https://pokeapi.co/api/v2/pokemon/?limit=150",
    n = document.querySelector("#search-bar");
  function o(e) {
    "object" == typeof e && "name" in e
      ? t.push(e)
      : console.log("pokemon is not correct");
  }
  function l(t) {
    pokemonRepository.loadDetails(t).then(function () {
      i(t);
    });
  }
  function i(t) {
    let e = $(".modal-body"),
      n = $(".modal-title");
    $(".modal-header");
    n.empty(), e.empty();
    let o = $("<h1>" + t.name + "</h1>"),
      l = $('<img class="modal-img" style="width:200px">');
    l.attr("src", t.imageUrl);
    let i = $('<img class="modal-img" style="width:200px">');
    i.attr("src", t.imageUrlBack);
    let a = $("<p>Height: " + t.height + " ft</p>"),
      c = $("<p>Weight: " + t.weight + " lbs</p>"),
      s = $(
        "<p>Type: " +
          t.types.charAt(0).toUpperCase() +
          t.types.slice(1) +
          "</p>"
      );
    n.append(o),
      e.append(l),
      e.append(i),
      e.append(a),
      e.append(c),
      e.append(s);
  }
  return (
    n.addEventListener("input", function () {
      let t = document.querySelectorAll("li"),
        e = n.value.toUpperCase();
      t.forEach(function (t) {
        t.innerText.toUpperCase().indexOf(e) > -1
          ? (t.style.display = "")
          : (t.style.display = "none");
      });
    }),
    {
      add: o,
      getAll: function () {
        return t;
      },
      addListItem: function (t) {
        let e = document.querySelector(".list-group"),
          n = document.createElement("li");
        n.classList.add("group-list-item");
        let o = document.createElement("button");
        (o.innerText = t.name),
          o.classList.add("pokemonlist-button"),
          o.setAttribute("data-target", "#exampleModal"),
          o.setAttribute("data-toggle", "modal"),
          n.appendChild(o),
          e.appendChild(n),
          o.addEventListener("click", function (e) {
            l(t);
          });
      },
      loadList: function () {
        return fetch(e)
          .then(function (t) {
            return t.json();
          })
          .then(function (t) {
            t.results.forEach(function (t) {
              o({
                name: t.name.charAt(0).toUpperCase() + t.name.slice(1),
                detailsUrl: t.url,
              });
            });
          })
          .catch(function (t) {
            console.error(t);
          });
      },
      loadDetails: function (t) {
        let e = t.detailsUrl;
        return fetch(e)
          .then(function (t) {
            return t.json();
          })
          .then(function (e) {
            (t.imageUrl = e.sprites.front_default),
              (t.imageUrlBack = e.sprites.back_default),
              (t.height = e.height),
              (t.weight = e.weight),
              (t.types = e.types[0].type.name);
          })
          .catch(function (t) {
            console.error(t);
          });
      },
      showDetails: l,
      showModal: i,
    }
  );
})();
pokemonRepository.loadList().then(function () {
  pokemonRepository.getAll().forEach(function (t) {
    pokemonRepository.addListItem(t);
  });
});
var mybutton = document.getElementById("myBtn");
function scrollFunction() {
  document.body.scrollTop > 20 || document.documentElement.scrollTop > 20
    ? (mybutton.style.display = "block")
    : (mybutton.style.display = "none");
}
function topFunction() {
  (document.body.scrollTop = 0), (document.documentElement.scrollTop = 0);
}
window.onscroll = function () {
  scrollFunction();
};
